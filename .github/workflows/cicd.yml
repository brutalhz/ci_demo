name: CI + CD

on:
  create:
  push:
    branches: [ main, release ]
  pull_request:
    branches: [ main, release ]

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Compile
        run: echo Hello, world!
    
  DeployDev:
    name: Deploy to Dev 
    if: github.event.ref == 'refs/heads/main' 
    needs: [Build]
    runs-on: ubuntu-latest
    environment: 
      name: Development
      url: 'http://dev.myapp.com'
    outputs:
      IMAGE_TAG: ${{ steps.check-tag.outputs.IMAGE_ID }}
    steps:
      - name: Deploy
        run: echo I am deploying!

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Tag
        id: check-tag
        run: |
           if [[ ${{ github.event.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
               echo "::set-output name=IMAGE_ID::${{ github.ref_name }}"
           else
             ts=$(date +%Y%m%d-%H.%M | awk -F- '{print $1 "-" sprintf("%02d", ($2 + 3) % 24) "." substr($2, 4)}')
             branch=dev
             echo "::set-output name=IMAGE_ID::${branch}-${GITHUB_SHA::8}-${ts}"
             echo "IMAGE_ID=${branch}-${GITHUB_SHA::8}-${ts}" >> $GITHUB_ENV
           fi

  test:
    needs: DeployDev
    runs-on: ubuntu-latest
    environment: 
      name: Development
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: test
        run: |
          echo "output: ${{ needs.DeployDev.outputs.IMAGE_TAG }}"

  create-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

      - name: Create release branch
        run: |
          git checkout -b release
          git push origin release


  # createPullRequest:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   needs: [DeployDev]
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Make changes to pull request
  #       run: date +%s > report.txt

  #     - name: test var github
  #       run: echo ${{ secrets.GITHUB_TOKEN }}

  #     - name: Create Pull Request
  #       id: cpr
  #       uses: peter-evans/create-pull-request@v7
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         commit-message: Update report
  #         committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
  #         author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
  #         signoff: false
  #         branch: example-patches
  #         delete-branch: false
  #         title: '[Example] Update report'
  #         body: |
  #           Update report
  #           - Updated with *today's* date
  #           - Auto-generated by [create-pull-request][1]

  #           [1]: https://github.com/peter-evans/create-pull-request
  #         # assignees: brutalhz
  #         # reviewers: brutalhz
  #         draft: false
  
  # Create_pr_repo_sync:
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: Staging
  #     url: 'http://test.myapp.com'
  #   needs: [DeployDev]
  #   steps:
  #     - uses: peterjgrainger/action-create-branch@v2.2.0
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         branch: 'release-notes'
  #         sha: '${{ github.event.pull_request.head.sha }}'

  DeployStaging:
    name: Deploy to Staging 
    if: github.event.ref == 'refs/heads/main'
    needs: [CreateBranch]
    runs-on: ubuntu-latest
    environment: 
      name: Staging
      url: 'http://test.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying! 
            
  DeployProd:
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    environment: 
      name: Production
      url: 'http://www.myapp.com'
    steps:
      - name: Deploy
        run: echo I am deploying!
